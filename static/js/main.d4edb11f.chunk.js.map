{"version":3,"sources":["engine.js","Overlay.js","SoundSource.js","App.js","data.js","index.js"],"names":["painting","loadedSounds","Map","players","meters","soundSourceLevels","soundSourceRipples","overlayFade","isOverlayVisible","animateSoundSources","entries","entry","file","meter","gain","Tone","getValue","set","requestAnimationFrame","makeObservable","this","observable","isLoaded","computed","setMouseListeners","values","every","v","window","addEventListener","e","windowInnerWidth","innerWidth","windowInnerHeight","innerHeight","setSoundPosition","pageX","pageY","key","sounds","forEach","get","url","process","player","console","log","buffer","getChannelData","FRAME_SIZE","maxRms","totalSum","i","length","sum","end","Math","min","j","rms","sqrt","max","totalRms","avgDecibel","maxDecibel","toFixed","loop","adjustVolume","undefined","volume","toDestination","connect","sound","state","start","animatedOverlay","AnimatedValue","play","value","xPercent","yPercent","element","document","getElementById","position","soundXPercent","soundYPercent","radius","dx","abs","dy","distance","decibels","observer","overlayStyle","opacity","engine","className","style","onClick","fadeOutOverlay","playSounds","DEFAULT_SIZE","DEFAULT_RIPPLE_MULTIPLE","SoundSource","soundSourceRef","useRef","rippleRef","useEffect","dispose","autorun","rippleGain","soundSource","current","ripple","size","width","height","marginLeft","marginTop","eased","pow","amplify","rippleSize","soundIconStyle","left","top","backgroundColor","color","rippleStyle","ref","id","fontSize","imageUrl","map","src","alt","name","artist","paintingsData","configure","enforceActions","whichPainting","Object","fromEntries","URLSearchParams","location","search","find","p","setPainting","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4edb11f.chunk.js","sourcesContent":["import * as Tone from \"tone\";\nimport AnimatedValue from \"animated-value\";\nimport { makeObservable, observable, computed } from \"mobx\";\n\nconst DEFAULT_DECIBELS = -12;\n\nclass Engine {\n  painting = null;\n\n  loadedSounds = new Map();\n  players = new Map();\n  meters = new Map();\n\n  soundSourceLevels = new Map();\n  soundSourceRipples = new Map();\n\n  overlayFade = 1;\n  isOverlayVisible = true;\n\n  get isLoaded() {\n    return [...this.loadedSounds.values()].every((v) => v == true);\n  }\n\n  constructor() {\n    makeObservable(this, {\n      painting: observable,\n      loadedSounds: observable,\n      soundSourceLevels: observable,\n      soundSourceRipples: observable,\n      overlayFade: observable,\n      isOverlayVisible: observable,\n      isLoaded: computed,\n    });\n\n    this.setMouseListeners();\n\n    requestAnimationFrame(() => {\n      this.animateSoundSources();\n    });\n  }\n\n  setMouseListeners() {\n    const mouseMove = (e) => {\n      const windowInnerWidth = window.innerWidth;\n      const windowInnerHeight = window.innerHeight;\n      this.setSoundPosition(\n        e.pageX / windowInnerWidth,\n        e.pageY / windowInnerHeight\n      );\n    };\n    window.addEventListener(\"mousemove\", mouseMove, false);\n  }\n\n  setPainting(painting) {\n    this.painting = painting;\n    const { key, sounds } = painting;\n\n    sounds.forEach((entry) => {\n      const { file } = entry;\n      if (this.players.get(file)) {\n        return;\n      }\n      const url = `${process.env.PUBLIC_URL}/${key}/${file}`;\n\n      const player = new Tone.Player(url, () => {\n        console.log(\"loaded\", file);\n        this.loadedSounds.set(file, true);\n\n        // Compute the RMS for the data\n        const buffer = player.buffer.getChannelData(0);\n        const FRAME_SIZE = 2048;\n        let maxRms = 0;\n        let totalSum = 0;\n        for (let i = 0; i < buffer.length; i += FRAME_SIZE) {\n          let sum = 0;\n          const end = Math.min(buffer.length, i + FRAME_SIZE);\n          for (let j = i; j < end; j++) {\n            sum += buffer[j] ** 2;\n            totalSum += buffer[j] ** 2;\n          }\n          const rms = Math.sqrt((1 / FRAME_SIZE) * sum);\n          maxRms = Math.max(rms, maxRms);\n        }\n        const totalRms = Math.sqrt((1 / buffer.length) * totalSum);\n        const avgDecibel = 20 * (Math.log(totalRms) / Math.log(10));\n        const maxDecibel = 20 * (Math.log(maxRms) / Math.log(10));\n        console.log(\n          `avg: ${avgDecibel.toFixed(2)}db, max: ${maxDecibel.toFixed(2)}db`\n        );\n      });\n\n      this.players.set(file, player);\n      player.loop = true;\n\n      const adjustVolume = entry.volume === undefined ? 0 : entry.volume;\n      const volume = new Tone.Volume(\n        DEFAULT_DECIBELS + adjustVolume\n      ).toDestination();\n      player.connect(volume);\n\n      const meter = new Tone.Meter(0.1);\n      volume.connect(meter);\n      this.meters.set(file, meter);\n\n      this.loadedSounds.set(file, false);\n    });\n  }\n\n  animateSoundSources = () => {\n    for (const entry of this.meters.entries()) {\n      const [file, meter] = entry;\n      const gain = Tone.dbToGain(meter.getValue());\n      this.soundSourceRipples.set(file, gain);\n    }\n\n    requestAnimationFrame(() => {\n      this.animateSoundSources();\n    });\n  };\n\n  async playSounds() {\n    await Tone.start();\n    this.painting.sounds.forEach((sound) => {\n      const player = this.players.get(sound.file);\n      if (player && player.state !== \"started\") {\n        player.start();\n      }\n    });\n  }\n\n  async fadeOutOverlay() {\n    if (this.animatedOverlay) return;\n\n    this.animatedOverlay = new AnimatedValue({\n      start: 1,\n      end: 0,\n    });\n\n    await this.animatedOverlay.play(500, () => {\n      this.overlayFade = this.animatedOverlay.value();\n    });\n\n    this.isOverlayVisible = false;\n    this.animatedOverlay = null;\n  }\n\n  setSoundPosition(xPercent, yPercent) {\n    this.painting.sounds.forEach((sound) => {\n      const element = document.getElementById(sound.file);\n      const [soundXPercent, soundYPercent] = sound.position;\n      const { radius } = sound;\n      if (element) {\n        const dx = Math.abs(soundXPercent - xPercent);\n        const dy = Math.abs(soundYPercent - yPercent);\n        const distance = Math.sqrt(dx ** 2 + dy ** 2);\n        const distancePercent = Math.min(1, distance / radius);\n        const gain = 1 - distancePercent;\n        const decibels = Tone.gainToDb(gain);\n        const player = this.players.get(sound.file);\n        this.soundSourceLevels.set(sound.file, gain);\n        if (player) {\n          player.volume.value = decibels + DEFAULT_DECIBELS;\n        }\n      }\n    });\n  }\n}\n\nexport default new Engine();\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport engine from \"./engine\";\n\nimport \"./Overlay.css\";\n\nconst OVERLAY_OPACITY = 0.75;\n\nexport function Overlay() {\n  const overlayStyle = {\n    opacity: engine.overlayFade * OVERLAY_OPACITY,\n  };\n\n  return (\n    <div className=\"overlay\" style={overlayStyle}>\n      {engine.isLoaded ? (\n        <span\n          className=\"state loaded\"\n          onClick={() => {\n            engine.fadeOutOverlay();\n            engine.playSounds();\n          }}\n        >\n          Start\n        </span>\n      ) : (\n        <div className=\"state loading\">Loading...</div>\n      )}\n    </div>\n  );\n}\n\nexport default observer(Overlay);\n","import React, { useRef, useEffect } from \"react\";\nimport { autorun } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\n\nimport \"./SoundSource.css\";\n\nimport engine from \"./engine\";\n\nconst MIN_OPACITY = 0.5;\nconst MIN_SIZE = 80;\nconst DEFAULT_SIZE = 100;\nconst MAX_SIZE = 120;\nconst DEFAULT_RIPPLE_MULTIPLE = 1.1;\nconst RIPPLE_EXTENT = 120;\n\nfunction amplify(gain) {\n  return 1 - Math.pow(1 - gain, 20);\n}\n\nfunction SoundSource({ sound }) {\n  const [xPercent, yPercent] = sound.position;\n  const soundSourceRef = useRef(null);\n  const rippleRef = useRef(null);\n\n  useEffect(() => {\n    const dispose = autorun(() => {\n      const gain = engine.soundSourceLevels.get(sound.file);\n      const rippleGain = engine.soundSourceRipples.get(sound.file);\n\n      if (gain == undefined) return;\n\n      const soundSource = soundSourceRef.current;\n      const ripple = rippleRef.current;\n\n      let opacity = gain * (1 - MIN_OPACITY) + MIN_OPACITY;\n      opacity = opacity * (1 - engine.overlayFade);\n      const size = gain * (MAX_SIZE - MIN_SIZE) + MIN_SIZE;\n\n      soundSource.style.opacity = opacity;\n      soundSource.style.width = `${size}px`;\n      soundSource.style.height = `${size}px`;\n      soundSource.style.marginLeft = `${-size / 2}px`;\n      soundSource.style.marginTop = `${-size / 2}px`;\n\n      const eased = amplify(rippleGain);\n      const add = eased * RIPPLE_EXTENT;\n      const rippleSize = size * DEFAULT_RIPPLE_MULTIPLE + add;\n\n      ripple.style.opacity = opacity;\n      ripple.style.width = `${rippleSize}px`;\n      ripple.style.height = `${rippleSize}px`;\n      ripple.style.marginLeft = `${-rippleSize / 2}px`;\n      ripple.style.marginTop = `${-rippleSize / 2}px`;\n    });\n    return () => {\n      dispose();\n    };\n  }, []);\n\n  const soundIconStyle = {\n    width: `${DEFAULT_SIZE}px`,\n    height: `${DEFAULT_SIZE}px`,\n    marginLeft: `${-DEFAULT_SIZE / 2}px`,\n    marginTop: `${-DEFAULT_SIZE / 2}px`,\n    left: `${xPercent * 100}%`,\n    top: `${yPercent * 100}%`,\n    backgroundColor: sound.color,\n    opacity: 0,\n  };\n\n  const rippleStyle = {\n    width: `${DEFAULT_SIZE * DEFAULT_RIPPLE_MULTIPLE}px`,\n    height: `${DEFAULT_SIZE * DEFAULT_RIPPLE_MULTIPLE}px`,\n    marginLeft: `${-(DEFAULT_SIZE * DEFAULT_RIPPLE_MULTIPLE) / 2}px`,\n    marginTop: `${-(DEFAULT_SIZE * DEFAULT_RIPPLE_MULTIPLE) / 2}px`,\n    left: `${xPercent * 100}%`,\n    top: `${yPercent * 100}%`,\n    opacity: 0,\n  };\n\n  return (\n    <>\n      <div ref={rippleRef} className=\"ripple\" style={rippleStyle}></div>\n      <div\n        id={sound.file}\n        ref={soundSourceRef}\n        className=\"sound-icon\"\n        style={soundIconStyle}\n      >\n        <VolumeUpIcon style={{ fontSize: 48 }} />\n      </div>\n    </>\n  );\n}\n\nexport default SoundSource;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport \"./App.css\";\n\nimport Overlay from \"./Overlay\";\nimport SoundSource from \"./SoundSource\";\n\nimport engine from \"./engine\";\n\nfunction App() {\n  const { painting } = engine;\n  const imageUrl = `${process.env.PUBLIC_URL}/${painting.key}/image.jpg`;\n\n  return (\n    <div className=\"App\">\n      <div className=\"image-container\">\n        {engine.isOverlayVisible ? <Overlay /> : null}\n\n        {painting.sounds.map((sound) => {\n          return <SoundSource key={sound.file} sound={sound} />;\n        })}\n\n        <img src={imageUrl} className=\"painting\" alt=\"\" />\n\n        <div className=\"image-description\">\n          <span className=\"title\">{painting.name}</span>\n          <span className=\"artist\">{painting.artist}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default observer(App);\n","export const paintingsData = [\n  {\n    name: \"Wheatfield with Crows\",\n    artist: \"Vincent Van Gogh\",\n    key: \"van_gogh\",\n    width: 3508,\n    height: 1669,\n    sounds: [\n      {\n        file: \"wheat.mp3\",\n        position: [0.3, 0.65],\n        radius: 0.6,\n        color: \"coral\",\n      },\n      {\n        file: \"crow.mp3\",\n        position: [0.8, 0.4],\n        radius: 0.5,\n        color: \"coral\",\n      },\n    ],\n  },\n  {\n    name: \"Girl in a Boat with Geese\",\n    artist: \"Berthe Morisot\",\n    key: \"morisot\",\n    width: 3392,\n    height: 4096,\n    sounds: [\n      {\n        file: \"geese.mp3\",\n        position: [0.85, 0.65],\n        radius: 0.4,\n        color: \"coral\",\n      },\n      {\n        file: \"humming.wav\",\n        position: [0.5, 0.25],\n        radius: 0.3,\n        color: \"coral\",\n      },\n      {\n        file: \"rowing.mp3\",\n        position: [0.34, 0.55],\n        radius: 0.3,\n        color: \"coral\",\n        volume: -12,\n      },\n    ],\n  },\n  {\n    name: \"Impression, Sunrise\",\n    artist: \"Claude Monet\",\n    key: \"monet\",\n    width: 1280,\n    height: 993,\n    sounds: [\n      {\n        file: \"foghorn.mp3\",\n        position: [0.1, 0.15],\n        radius: 0.3,\n        color: \"coral\",\n      },\n      {\n        file: \"gulls.mp3\",\n        position: [0.8, 0.2],\n        radius: 0.5,\n        color: \"coral\",\n      },\n      {\n        file: \"harborwaves.mp3\",\n        position: [0.5, 0.8],\n        radius: 0.7,\n        color: \"coral\",\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { configure } from \"mobx\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { paintingsData } from \"./data\";\nimport engine from \"./engine\";\n\nconfigure({\n  enforceActions: \"never\",\n});\n\nconst params = Object.fromEntries(new URLSearchParams(window.location.search));\nconst whichPainting = params.painting;\nconst painting =\n  paintingsData.find((p) => p.key === whichPainting) ?? paintingsData[1];\n\nengine.setPainting(painting);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
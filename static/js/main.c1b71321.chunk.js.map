{"version":3,"sources":["audio.js","App.js","data.js","reportWebVitals.js","index.js"],"names":["value","players","Map","loadedSounds","sceneSounds","makeObservable","this","observable","isLoaded","computed","values","every","v","key","sounds","forEach","entry","file","get","url","player","Tone","console","log","set","toDestination","loop","volume","sound","state","start","setSoundPosition","xPercent","yPercent","element","document","getElementById","position","soundXPercent","soundYPercent","radius","dx","Math","abs","dy","distance","sqrt","gain","min","decibels","opacity","size","style","width","height","marginLeft","marginTop","painting","name","artist","color","audio","setSounds","autorun","observer","useState","isOverlayShown","setIsOverlayShown","useEffect","mouseMove","e","windowInnerWidth","window","innerWidth","windowInnerHeight","innerHeight","pageX","pageY","addEventListener","removeEventListener","imageUrl","process","showHideOverlay","className","onClick","playSounds","map","soundIconStyle","left","top","backgroundColor","id","fontSize","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c1b71321.chunk.js","sourcesContent":["import * as Tone from \"tone\";\nimport { makeObservable, observable, computed } from \"mobx\";\n\nconst DEFAULT_DECIBELS = -12;\n\nclass AudioPlayer {\n  players = new Map();\n  loadedSounds = new Map();\n  sceneSounds = [];\n\n  get isLoaded() {\n    return [...this.loadedSounds.values()].every((v) => v == true);\n  }\n\n  constructor(value) {\n    makeObservable(this, {\n      loadedSounds: observable,\n      isLoaded: computed,\n    });\n    this.value = value;\n  }\n\n  setSounds(key, sounds) {\n    sounds.forEach((entry) => {\n      const { file } = entry;\n      if (this.players.get(file)) {\n        return;\n      }\n      const url = `${key}/${file}`;\n      const player = new Tone.Player(url, () => {\n        console.log(\"loaded\", file);\n        this.loadedSounds.set(file, true);\n      }).toDestination();\n      this.players.set(file, player);\n      player.loop = true;\n      player.volume.value = DEFAULT_DECIBELS;\n\n      this.loadedSounds.set(file, false);\n    });\n\n    this.sceneSounds = sounds;\n  }\n\n  playSounds() {\n    this.sceneSounds.forEach((sound) => {\n      const player = this.players.get(sound.file);\n      if (player && player.state !== \"started\") {\n        player.start();\n        this.setSoundPosition(0, 0);\n      }\n    });\n  }\n\n  setSoundPosition(xPercent, yPercent) {\n    this.sceneSounds.forEach((sound) => {\n      const element = document.getElementById(sound.file);\n      const [soundXPercent, soundYPercent] = sound.position;\n      const { radius } = sound;\n      if (element) {\n        const dx = Math.abs(soundXPercent - xPercent);\n        const dy = Math.abs(soundYPercent - yPercent);\n        const distance = Math.sqrt(dx ** 2 + dy ** 2);\n        const distancePercent = Math.min(1, distance / radius);\n        const gain = 1 - distancePercent;\n        const decibels = Tone.gainToDb(gain);\n        const player = this.players.get(sound.file);\n        if (player) {\n          const MIN_OPACITY = 0.5;\n          const MIN_SIZE = 40;\n          const MAX_SIZE = 80;\n          const opacity = gain * (1 - MIN_OPACITY) + MIN_OPACITY;\n          const size = gain * (MAX_SIZE - MIN_SIZE) + MIN_SIZE;\n          element.style.opacity = opacity;\n          element.style.width = `${size}px`;\n          element.style.height = `${size}px`;\n          element.style.marginLeft = `${-size / 2}px`;\n          element.style.marginTop = `${-size / 2}px`;\n          player.volume.value = decibels + DEFAULT_DECIBELS;\n        }\n      }\n    });\n  }\n}\n\nexport default new AudioPlayer();\n","import React, { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { autorun } from \"mobx\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\n\nimport \"./App.css\";\n\nimport { paintingsData } from \"./data\";\nimport audio from \"./audio\";\n\nconst painting = paintingsData[2];\naudio.setSounds(painting.key, painting.sounds);\n\nautorun(() => {\n  console.log(\"ðŸ”¥\", audio.isLoaded);\n});\n\nfunction App() {\n  const [isOverlayShown, setIsOverlayShown] = useState(true);\n  useEffect(() => {\n    const mouseMove = (e) => {\n      const windowInnerWidth = window.innerWidth;\n      const windowInnerHeight = window.innerHeight;\n      audio.setSoundPosition(\n        e.pageX / windowInnerWidth,\n        e.pageY / windowInnerHeight\n      );\n    };\n    window.addEventListener(\"mousemove\", mouseMove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", mouseMove);\n    };\n  }, []);\n\n  const imageUrl = `${process.env.PUBLIC_URL}/${painting.key}/image.jpg`;\n  const showHideOverlay = isOverlayShown ? \"shown\" : \"hidden\";\n\n  return (\n    <div className=\"App\">\n      <div className=\"image-container\">\n        <div className={`overlay ${showHideOverlay}`}>\n          {audio.isLoaded ? (\n            <span\n              className=\"state loaded\"\n              onClick={() => {\n                setIsOverlayShown(false);\n                audio.playSounds();\n              }}\n            >\n              Start\n            </span>\n          ) : (\n            <div className=\"state loading\">Loading...</div>\n          )}\n        </div>\n\n        {!isOverlayShown\n          ? painting.sounds.map((sound) => {\n              const [xPercent, yPercent] = sound.position;\n              const soundIconStyle = {\n                marginLeft: `${-60 / 2}px`,\n                marginTop: `${-60 / 2}px`,\n                left: `${xPercent * 100}%`,\n                top: `${yPercent * 100}%`,\n                backgroundColor: sound.color,\n              };\n              return (\n                <div\n                  key={sound.file}\n                  id={sound.file}\n                  className=\"sound-icon\"\n                  style={soundIconStyle}\n                >\n                  <VolumeUpIcon style={{ fontSize: 48 }} />\n                </div>\n              );\n            })\n          : null}\n\n        <img src={imageUrl} className=\"painting\" alt=\"\" />\n\n        <div className=\"image-description\">\n          <span className=\"title\">{painting.name}</span>\n          <span className=\"artist\">{painting.artist}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default observer(App);\n","export const paintingsData = [\n  {\n    name: \"Wheatfield with Crows\",\n    artist: \"Vincent Van Gogh\",\n    key: \"van_gogh\",\n    width: 3508,\n    height: 1669,\n    sounds: [\n      {\n        file: \"wheat.mp3\",\n      },\n      {\n        file: \"crow.mp3\",\n      },\n    ],\n  },\n  {\n    name: \"Girl in a Boat with Geese\",\n    artist: \"Berthe Morisot\",\n    key: \"morisot\",\n    width: 3392,\n    height: 4096,\n    sounds: [\n      {\n        file: \"geese.mp3\",\n      },\n      {\n        file: \"humming.wav\",\n      },\n      {\n        file: \"rowing.mp3\",\n      },\n    ],\n  },\n  {\n    name: \"Impression, Sunrise\",\n    artist: \"Claude Monet\",\n    key: \"monet\",\n    width: 1280,\n    height: 993,\n    sounds: [\n      {\n        file: \"foghorn.mp3\",\n        position: [0.1, 0.15],\n        radius: 0.3,\n        color: \"coral\",\n      },\n      {\n        file: \"gulls.mp3\",\n        position: [0.8, 0.2],\n        radius: 0.5,\n        color: \"coral\",\n      },\n      {\n        file: \"harborwaves.mp3\",\n        position: [0.5, 0.8],\n        radius: 0.7,\n        color: \"coral\",\n      },\n    ],\n  },\n];\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}